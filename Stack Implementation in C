#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

struct Stack {
    int items[MAX_SIZE];
    int top;
};

void initialize(struct Stack *stack) {
    stack->top = -1;
}

int is_empty(struct Stack *stack) {
    return stack->top == -1;
}

int is_full(struct Stack *stack) {
    return stack->top == MAX_SIZE - 1;
}

void push(struct Stack *stack, int item) {
    if (is_full(stack)) {
        printf("Stack overflow!\n");
        return;
    }
    stack->items[++stack->top] = item;
}

int pop(struct Stack *stack) {
    if (is_empty(stack)) {
        printf("Stack underflow!\n");
        return -1; // Assuming -1 represents an error value
    }
    return stack->items[stack->top--];
}

int peek(struct Stack *stack) {
    if (is_empty(stack)) {
        printf("Stack is empty!\n");
        return -1; // Assuming -1 represents an error value
    }
    return stack->items[stack->top];
}

int size(struct Stack *stack) {
    return stack->top + 1;
}
